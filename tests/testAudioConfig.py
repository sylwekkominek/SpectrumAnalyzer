# DO NOT EDIT THIS FILE, IT IS USED ONLY IN TESTS
# Copyright (C) 2024, Sylwester Kominek
# This file is part of SpectrumAnalyzer program licensed under GPLv2 or later,
# see file LICENSE in this source tree.

import math 

def initialize(dataLength, samplingRate):

    global numberOfSamples
    global fs
    
    numberOfSamples = dataLength
    fs = samplingRate
    
    return True
    
def getData():
    
    signalFrequency = 1000
    samplingPeriod = 1.0/fs
    numberOfChannels = 2
    fullScaleAmplitude = 32767

    result = tuple()

    for x in range(numberOfChannels * numberOfSamples):
        sampleNumber = int(x/2)
        
        if(x % 2):
            y=fullScaleAmplitude*math.sin(2*math.pi*sampleNumber*signalFrequency*samplingPeriod)
        else:
            y=fullScaleAmplitude*math.cos(2*math.pi*sampleNumber*signalFrequency*samplingPeriod)
            
        result += (y,)
    	
    return result

